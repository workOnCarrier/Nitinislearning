version: '3'
services:

#running kafka without zookeeper (using KRaft)
#Kafka Service
  kafka-1:
    image: 'bitnami/kafka:3.4'
    container_name: kafka-1
    networks:
      - dev-network
    environment:
     - KAFKA_ENABLE_KRAFT=yes
     - ALLOW_PLAINTEXT_LISTENER=yes
     - KAFKA_CFG_NODE_ID=101
     - KAFKA_KRAFT_CLUSTER_ID=OTMwNzFhYTY1ODNiNGE5OT

     - KAFKA_CFG_PROCESS_ROLES=broker,controller
     - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
     - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,CLIENT:PLAINTEXT,INTERNAL:PLAINTEXT
     - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=101@kafka-1:29091,102@kafka-2:29093

     - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka-1:9092,INTERNAL://kafka-1:29092
     - KAFKA_CFG_LISTENERS=CLIENT://:9092,CONTROLLER://:29091,INTERNAL://:29092
     - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL
     #Identify all other controllers in the cluster
    ports:
     - '9092:9092'

  kafka-2:
    image: 'bitnami/kafka:3.4'
    container_name: kafka-2
    networks:
      - dev-network
    environment:
     - KAFKA_ENABLE_KRAFT=yes
     - ALLOW_PLAINTEXT_LISTENER=yes
     - KAFKA_CFG_NODE_ID=102
     - KAFKA_KRAFT_CLUSTER_ID=OTMwNzFhYTY1ODNiNGE5OT

     - KAFKA_CFG_PROCESS_ROLES=broker,controller
     - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
     - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT,INTERNAL:PLAINTEXT
     - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=101@kafka-1:29091,102@kafka-2:29093

     - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka-2:9093,INTERNAL://kafka-2:29093
     - KAFKA_CFG_LISTENERS=CLIENT://:9093,CONTROLLER://:29093,INTERNAL://:29094
     - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL

    ports:
     - '9093:9093'

  kafka-3:
    image: 'bitnami/kafka:3.4'
    container_name: kafka-3
    networks:
      - dev-network
    environment:
     - KAFKA_ENABLE_KRAFT=yes
     - ALLOW_PLAINTEXT_LISTENER=yes
     - KAFKA_CFG_NODE_ID=103
     - KAFKA_KRAFT_CLUSTER_ID=OTMwNzFhYTY1ODNiNGE5OT

     - KAFKA_CFG_PROCESS_ROLES=broker
     - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
     - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT,INTERNAL:PLAINTEXT
     - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=101@kafka-1:29091,102@kafka-2:29093

     - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka-3:9094,INTERNAL://kafka-3:29094
     - KAFKA_CFG_LISTENERS=CLIENT://:9094,INTERNAL://:29094
     - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL

    ports:
     - '9094:9094'

    depends_on:
      - "kafka-1"
      - "kafka-2"

  kafdrop:
    image: 'obsidiandynamics/kafdrop:3.32.0-SNAPSHOT'
    container_name: kafdrop
    restart: "no"
    ports:
      - 9000:9000
    networks:
      - dev-network

    environment:
      # - KAFKA_BROKERCONNECT=kafka-1:29092,kafka-2:29093,kafka-3:29094
      - KAFKA_BROKERCONNECT=kafka-1:9092,kafka-2:9093,kafka-3:9094
      - JVM_OPTS=-Xms32M -Xmx64M
      - SERVER_SERVLET_CONTEXTPATH=/
    
    depends_on:
      - "kafka-1"
      - "kafka-2"
      - "kafka-3"

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    networks:
      - dev-network
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
    ports:
      - "8080:8080"
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=kafka-cluster
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka-1:9092,kafka-2:9093,kafka-3:9094
      # - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
      - DYNAMIC_CONFIG_ENABLED=true

networks:
  dev-network:
    external: true

volumes:
  kafka_data:
    driver: local
    
